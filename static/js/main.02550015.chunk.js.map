{"version":3,"sources":["reportWebVitals.js","util/dummydata.js","pages/addproduct.js","util/massdelteitems.js","Product/Product.js","Product/Products.js","util/Delete-from-db.js","pages/home.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Product_array","PrdID","Sku","Name","Price","Attribute","AttType","DummyData","Dummy_Data","AddProduct","_useState","useState","_useState2","Object","slicedToArray","enteredWeight","SetEnteredWeight","_useState3","_useState4","enteredSize","SetEnteredSize","_useState5","_useState6","enteredHeight","SetEnteredHeight","_useState7","_useState8","enteredWidth","SetEnteredWidth","_useState9","_useState10","enteredLenght","SetEnteredLenght","_useState11","_useState12","enteredSku","SetEnteredSku","_useState13","_useState14","enteredName","SetEnteredName","_useState15","_useState16","enteredPrice","SetEnteredPrice","_useState17","_useState18","TypeName","setTypeName","_useState19","react_default","a","createElement","_useState20","TypeForm","SetTypeForm","navigate","useNavigate","WeightOnChange","event","target","value","SizeOnChange","HeightOnChange","val","WidthOnChange","LenghtOnChange","dvdForm","className","name","id","type","defaultValue","onChange","bookForm","FurnForm","SaveBtn","IsNotValid","EmptyBox","invalidData","parseFloat","toString","IsEmpty","IsNotDataType","validation","alert","onSubmit","preventDefault","DataObj","SKU","push","axios","post","Response","console","log","catch","error","onClick","Value","DeleteList","MassDeleteItems","ID","includes","filter","x","Product","props","isChecked","setIsChecked","Products","items","length","sort","y","map","product","src_Product_Product","DeleteFromDB","response","Home","fetchData","SetFetchData","AllItems","SetAllItems","useEffect","fetch","method","action","res","json","data","Product_Products","App","react_router_dom","react_router","path","element","pages_home","pages_addproduct","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"kRAYeA,SAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,iECPRY,EAAgB,CAClB,CACEC,MAAQ,EACRC,IAAM,WACNC,KAAO,QACPC,MAAQ,KACRC,UAAY,MACZC,QAAU,iBAEZ,CACEL,MAAQ,EACRC,IAAM,SACNC,KAAO,YACPC,MAAQ,MACRC,UAAY,WACZC,QAAU,wBAEZ,CACEL,MAAQ,EACRC,IAAM,SACNC,KAAO,OACPC,MAAQ,KACRC,UAAY,IACZC,QAAU,iBAEZ,CACEL,MAAQ,GACRC,IAAM,SACNC,KAAO,OACPC,MAAQ,KACRC,UAAY,IACZC,QAAU,iBAEZ,CACEL,MAAQ,EACRC,IAAM,SACNC,KAAO,OACPC,MAAQ,KACRC,UAAY,IACZC,QAAU,iBAEZ,CACEL,MAAQ,EACRC,IAAM,SACNC,KAAO,OACPC,MAAQ,KACRC,UAAY,IACZC,QAAU,iBAEZ,CACEL,MAAQ,GACRC,IAAM,SACNC,KAAO,cACPC,MAAQ,KACRC,UAAY,IACZC,QAAU,iBAEZ,CACEL,MAAQ,GACRC,IAAM,SACNC,KAAO,cACPC,MAAQ,KACRC,UAAY,IACZC,QAAU,iBAEZ,CACEL,MAAQ,GACRC,IAAM,SACNC,KAAO,cACPC,MAAQ,KACRC,UAAY,IACZC,QAAU,aASDC,EALG,WAEd,OAAOP,GCpEPQ,EAAaD,IA8UFE,EA7UI,WAAM,IAAAC,EAGmBC,mBAAS,IAH5BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGhBK,EAHgBH,EAAA,GAGDI,EAHCJ,EAAA,GAAAK,EAIeN,mBAAS,IAJxBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAIhBE,EAJgBD,EAAA,GAIHE,EAJGF,EAAA,GAAAG,EAKmBV,mBAAS,IAL5BW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAKhBE,EALgBD,EAAA,GAKDE,EALCF,EAAA,GAAAG,EAMiBd,mBAAS,IAN1Be,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAMhBE,EANgBD,EAAA,GAMFE,EANEF,EAAA,GAAAG,EAOmBlB,mBAAS,IAP5BmB,EAAAjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GAOhBE,EAPgBD,EAAA,GAODE,EAPCF,EAAA,GAAAG,EAQatB,mBAAS,IARtBuB,EAAArB,OAAAC,EAAA,EAAAD,CAAAoB,EAAA,GAQhBE,EARgBD,EAAA,GAQJE,EARIF,EAAA,GAAAG,EASe1B,mBAAS,IATxB2B,EAAAzB,OAAAC,EAAA,EAAAD,CAAAwB,EAAA,GAShBE,EATgBD,EAAA,GASHE,EATGF,EAAA,GAAAG,EAUiB9B,mBAAS,IAV1B+B,EAAA7B,OAAAC,EAAA,EAAAD,CAAA4B,EAAA,GAUhBE,EAVgBD,EAAA,GAUFE,EAVEF,EAAA,GAAAG,EAWSlC,mBAAS,WAXlBmC,EAAAjC,OAAAC,EAAA,EAAAD,CAAAgC,EAAA,GAWhBE,EAXgBD,EAAA,GAWNE,EAXMF,EAAA,GAAAG,EAeStC,mBAASuC,EAAAC,EAAAC,cAAA,WAflBC,EAAAxC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,GAehBK,EAfgBD,EAAA,GAeNE,EAfMF,EAAA,GAkBnBG,EAAWC,cAGTC,EAAiB,SAACC,GACtB3C,EAAiB2C,EAAMC,OAAOC,QAI1BC,EAAe,SAACH,GACpBvC,EAAeuC,EAAMC,OAAOC,QAIxBE,EAAiB,SAACC,GACtBxC,EAAiBwC,EAAIJ,OAAOC,QAIxBI,EAAgB,SAACN,GACrB/B,EAAgB+B,EAAMC,OAAOC,QAIzBK,EAAiB,SAACP,GACtB3B,EAAiB2B,EAAMC,OAAOC,QAmB1BM,EAAU,WAEZ,OACEjB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOgB,UAAU,aAAjB,aACAlB,EAAAC,EAAAC,cAAA,SACEiB,KAAK,OACLC,GAAG,OACHC,KAAK,OACLC,aAAcrD,EACdsD,SAAUX,IAEZZ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,YAAb,qCAMFM,EAAW,WACb,OACExB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOgB,UAAU,aAAjB,eACAlB,EAAAC,EAAAC,cAAA,SACEiB,KAAK,SACLC,GAAG,SACHE,aAAczD,EACd0D,SAAUf,IAEZR,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,aAAb,wCAMFO,GAAW,WACb,OACEzB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOgB,UAAU,aAAjB,eACAlB,EAAAC,EAAAC,cAAA,SACEiB,KAAK,SACLC,GAAG,SACHE,aAAcjD,EACdkD,SAAUV,IAEZb,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOgB,UAAU,aAAjB,eACAlB,EAAAC,EAAAC,cAAA,SACEiB,KAAK,QACLC,GAAG,QACHE,aAAc7C,EACd8C,SAAUR,IAEZf,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOgB,UAAU,aAAjB,eACAlB,EAAAC,EAAAC,cAAA,SACEkB,GAAG,SACHD,KAAK,SACLG,aAAczC,EACd0C,SAAUP,IAEZhB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGgB,UAAU,YAAb,yCAkFFQ,GAAU,WAGd,IAAIC,EAxDa,WAEjB,IAAIC,GAAW,EACXC,GAAc,EA8ClB,MA3CmB,KAAf5C,GAAoC,KAAhBI,GAAsC,KAAjBI,GAAoC,YAAbI,IAClE+B,GAAW,GAIVE,WAAWrC,GAAcsC,aAAetC,IACzCoC,GAAc,GAGC,QAAbhC,IACkB,KAAhB5B,IACF2D,GAAW,GAIVE,WAAW7D,GAAa8D,aAAe9D,IACxC4D,GAAc,IAID,SAAbhC,IACoB,KAAlBhC,IACF+D,GAAW,GAIVE,WAAWjE,GAAekE,aAAelE,IAC1CgE,GAAc,IAID,cAAbhC,IACoB,KAAlBxB,GAA0C,KAAlBQ,GAAyC,KAAjBJ,IAClDmD,GAAW,GAIVE,WAAWzD,GAAe0D,aAAe1D,GAAiByD,WAAWjD,GAAekD,aAAelD,GACpGiD,WAAWrD,GAAcsD,aAAetD,IACxCoD,GAAc,IAIX,CAAEG,QAAUJ,EAAUK,cAAgBJ,GAO5BK,GAGjB,GAAIP,EAAWK,QACbG,MAAM,oCADR,CAMA,IAAGR,EAAWM,cAKd,MAAO,YAJLE,MAAM,gDAqDV,OAEInC,EAAAC,EAAAC,cAAA,QAAMiB,KAAK,eAAeC,GAAG,eAAegB,SAhDrB,SAAC/F,GAExBA,EAAEgG,iBAGF,IAAMC,EAAU,CACdC,IAAMtD,EACNhC,KAAOoC,EACPnC,MAAQuC,EACRtC,UAAY,IAId,GAAiB,cAAduE,KAAH,CAIA,OAAQ7B,GAEN,IAAK,MACHyC,EAAQnF,UAAYc,EACpBX,EAAWkF,KAAKF,GAChBG,IAAMC,KAAK,wCAAwCJ,GAAShG,KAAK,SAAAqG,GAAQ,OAAIC,QAAQC,IAAIF,KACxFG,MAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAIE,KAC5B,MAEF,IAAK,OACHT,EAAQnF,UAAYU,EACpBP,EAAWkF,KAAKF,GAChBG,IAAMC,KAAK,4CAA4CJ,GAAShG,KAAK,SAAAqG,GAAQ,OAAIC,QAAQC,IAAIF,KAC5FG,MAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAIE,KAC5B,MAEF,IAAK,YACHT,EAAQnF,UAAYkB,EAAgB,IAAMI,EAAe,IAAMI,EAC/DvB,EAAWkF,KAAKF,GAChBG,IAAMC,KAAK,iDAAiDJ,GAAShG,KAAK,SAAAqG,GAAQ,OAAIC,QAAQC,IAAIF,KACjGG,MAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAIE,KAIhCH,QAAQC,IAAIP,GACZhC,EAAS,QAOPN,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,UAAd,eACAlB,EAAAC,EAAAC,cAAA,SACEmB,KAAK,SACLV,MAAM,SACNO,UAAU,YACV8B,QAAS,kBAAM1C,EAAS,QAE1BN,EAAAC,EAAAC,cAAA,SACEmB,KAAK,SACLV,MAAM,OACNO,UAAU,YAEZlB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,SACdlB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,SACblB,EAAAC,EAAAC,cAAA,SAAOgB,UAAU,SAAjB,OACAlB,EAAAC,EAAAC,cAAA,SACEmB,KAAK,OACLF,KAAK,MACLC,GAAG,MACHT,MAAO1B,EACPsC,SAlPU,SAACd,GACnBvB,EAAcuB,EAAMC,OAAOC,UAmPrBX,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOgB,UAAU,SAAjB,QACAlB,EAAAC,EAAAC,cAAA,SACEmB,KAAK,OACLF,KAAK,OACLC,GAAG,OACHT,MAAOtB,EACPkC,SArQW,SAACd,GACpBnB,EAAemB,EAAMC,OAAOC,UAsQtBX,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOgB,UAAU,SAAjB,cACAlB,EAAAC,EAAAC,cAAA,SACEgB,UAAU,kBACVC,KAAK,QACLC,GAAG,QACHT,MAAOlB,EACP8B,SAzQY,SAACd,GACrBf,EAAgBe,EAAMC,OAAOC,UA0QvBX,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOgB,UAAU,SAAjB,iBACElB,EAAAC,EAAAC,cAAA,UAAQkB,GAAG,cAAcG,SA5LxB,SAAClF,GAEZ,IAAI4G,EAAQ5G,EAAEqE,OAAOC,MAEL,QAAVsC,GACF5C,EAAYY,GACZnB,EAAY,QAEK,cAAVmD,GACP5C,EAAYoB,IACZ3B,EAAY,cAEK,SAAVmD,GACP5C,EAAYmB,GACZ1B,EAAY,UAIZO,IACAP,EAAY,cA0KJE,EAAAC,EAAAC,cAAA,UAAQS,MAAM,WAAd,oBACAX,EAAAC,EAAAC,cAAA,UAAQS,MAAM,OAAd,OACAX,EAAAC,EAAAC,cAAA,UAAQS,MAAM,QAAd,QACAX,EAAAC,EAAAC,cAAA,UAAQS,MAAM,aAAd,eAGPP,EACDJ,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,WC9UlBgC,eAAa,IAoBFC,EAlBS,SAACC,GAGrB,OAAS,GAANA,GAAWA,EAGPF,EAAWG,SAASD,QAEnBF,EAAaA,EAAWI,OAAO,SAAAC,GAAC,OAAIA,IAAMH,MAI9CF,EAAWV,KAAKY,GACTR,QAAQC,IAAIK,IAEhBA,GCWIM,EA5BC,SAACC,GACjB,IAAAjG,EAGkCC,oBAAS,GAH3CC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGOkG,EAHPhG,EAAA,GAGkBiG,EAHlBjG,EAAA,GAcI,OACIsC,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,eACXlB,EAAAC,EAAAC,cAAA,SAAOkB,GAAKqC,EAAML,GAAI/B,KAAK,WAAWH,UAAU,kBAAkBK,SAVvD,WAEnBoC,GAAcD,GACdP,EAAgBM,EAAML,OAQdpD,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,WACXlB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,OAAOuC,EAAMzG,KAC3BgD,EAAAC,EAAAC,cAAA,UAAKuD,EAAMxG,MACX+C,EAAAC,EAAAC,cAAA,UAAKuD,EAAMvG,MAAX,MACA8C,EAAAC,EAAAC,cAAA,UAAKuD,EAAMrG,QAAX,IAAqBqG,EAAMtG,UAA3B,QCCDyG,SAtBE,SAACH,GAIhB,OAHIA,EAAMI,MAAMC,OAId9D,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,SACblB,EAAAC,EAAAC,cAAA,UACGuD,EAAMI,MAAME,KAAK,SAACR,EAAES,GAAH,OAAST,EAAExG,MAAQiH,EAAEjH,QAAOkH,IAAI,SAACC,GAAD,OAChDlE,EAAAC,EAAAC,cAACiE,EAAD,CACEf,GAAIc,EAAQnH,MACZC,IAAKkH,EAAQlH,IACbC,KAAMiH,EAAQjH,KACdC,MAAOgH,EAAQhH,MACfE,QAAS8G,EAAQ9G,QACjBD,UAAW+G,EAAQ/G,kBCLhBiH,EATM,SAACX,GAGlBhB,IAAMC,KAAK,gDAAiDe,GAAOnH,KAAK,SAAA+H,GAAQ,OAAIzB,QAAQC,IAAIwB,KAC/FvB,MAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAIE,MCC5BzF,EAAaD,IAkEFiH,MAjEf,WAAgB,IAAA9G,EAGoBC,mBAAS,GAH7BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGP+G,EAHO7G,EAAA,GAGI8G,EAHJ9G,EAAA,GAMV4C,EAAWC,cANDxC,EAUkBN,mBAASH,GAV3BU,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAUP0G,EAVOzG,EAAA,GAUG0G,EAVH1G,EAAA,GAkDd,OANA2G,oBAAU,WAAOC,MAAM,2CACT,CAACC,OAAS,OAAQC,OAAS,YACvCxI,KAAM,SAAAyI,GAAG,OAAIA,EAAIC,SAAQ1I,KAAK,SAAA2I,GAAI,OAAIP,EAAYO,KAAOnC,MAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAIE,MACpF,CAACwB,IAKDvE,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,OACblB,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,eAAd,gBACAlB,EAAAC,EAAAC,cAAA,SAAOmB,KAAK,SAAUD,GAAG,qBAAqBF,UAAU,YAAYP,MAAM,cAAcqC,QAzC1E,WAGhB,IAAMa,EAAQV,IAGM,IAAjBU,EAAMC,SAITM,EAAaP,GAgBbW,EAAa,OAgBXxE,EAAAC,EAAAC,cAAA,SAAOmB,KAAK,SAASD,GAAG,MAAMT,MAAM,MAAMqC,QAAS,kBAAM1C,EAAS,mBAClEN,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,SACdlB,EAAAC,EAAAC,cAACgF,EAAD,CAAUrB,MAAOY,IACjBzE,EAAAC,EAAAC,cAAA,MAAIgB,UAAU,WCpDLiE,MAZf,WAEE,OACEnF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KACApF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,KACErF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAOC,KAAK,IAAIC,QAASvF,EAAAC,EAAAC,cAACsF,EAAD,QACzBxF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAOC,KAAK,cAAcC,QAAWvF,EAAAC,EAAAC,cAACuF,EAAD,WCL9BC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAED9F,EAAAC,EAAAC,cAACF,EAAAC,EAAM8F,WAAP,KACE/F,EAAAC,EAAAC,cAAC8F,EAAD,QAON/J","file":"static/js/main.02550015.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const Product_array = [\r\n    {\r\n      PrdID : 0,\r\n      Sku : \"TR512313\",\r\n      Name : \"CdDvD\",\r\n      Price : \"35\",\r\n      Attribute : \"700\",\r\n      AttType : \"Size  : 700MB\"\r\n    },\r\n    {\r\n      PrdID : 1,\r\n      Sku : \"JS4546\",\r\n      Name : \"Furniture\",\r\n      Price : \"100\",\r\n      Attribute : \"50x90x70\",\r\n      AttType : \"Dimension : 50x90x70\"\r\n    },\r\n    {\r\n      PrdID : 3,\r\n      Sku : \"Bk1534\",\r\n      Name : \"Book\",\r\n      Price : \"12\",\r\n      Attribute : \"1\",\r\n      AttType : \"Weight (KG) :\"\r\n    },\r\n    {\r\n      PrdID : 12,\r\n      Sku : \"Bk1534\",\r\n      Name : \"Book\",\r\n      Price : \"12\",\r\n      Attribute : \"1\",\r\n      AttType : \"Weight (KG) :\"\r\n    },\r\n    {\r\n      PrdID : 9,\r\n      Sku : \"Bk1534\",\r\n      Name : \"Book\",\r\n      Price : \"12\",\r\n      Attribute : \"1\",\r\n      AttType : \"Weight (KG) :\"\r\n    },\r\n    {\r\n      PrdID : 5,\r\n      Sku : \"Bk1534\",\r\n      Name : \"Book\",\r\n      Price : \"12\",\r\n      Attribute : \"1\",\r\n      AttType : \"Weight (KG) :\"\r\n    },\r\n    {\r\n      PrdID : 14,\r\n      Sku : \"Bk1534\",\r\n      Name : \"NameTest002\",\r\n      Price : \"12\",\r\n      Attribute : \"1\",\r\n      AttType : \"Weight (KG) :\"\r\n    },\r\n    {\r\n      PrdID : 75,\r\n      Sku : \"Bk1534\",\r\n      Name : \"NameTest001\",\r\n      Price : \"12\",\r\n      Attribute : \"1\",\r\n      AttType : \"Weight (KG) :\"\r\n    },\r\n    {\r\n      PrdID : 34,\r\n      Sku : \"Bk1534\",\r\n      Name : \"NameTest000\",\r\n      Price : \"12\",\r\n      Attribute : \"1\",\r\n      AttType : \"Weight :\"\r\n    },\r\n  ]\r\n\r\nconst DummyData = () =>\r\n{\r\n    return Product_array;\r\n}\r\n\r\nexport default DummyData;","import React, { useEffect, useState } from \"react\";\nimport \"./addproduct.css\";\nimport Combobox from \"react-widgets/Combobox\";\nimport \"react-widgets/styles.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport DummyData from \"../util/dummydata\";\n\n\nlet Dummy_Data = DummyData();\nconst AddProduct = () => {\n\n  // useStates for each input box.\n  const [enteredWeight, SetEnteredWeight] = useState(\"\");\n  const [enteredSize, SetEnteredSize] = useState(\"\");\n  const [enteredHeight, SetEnteredHeight] = useState(\"\");\n  const [enteredWidth, SetEnteredWidth] = useState(\"\");\n  const [enteredLenght, SetEnteredLenght] = useState(\"\");\n  const [enteredSku, SetEnteredSku] = useState(\"\");\n  const [enteredName, SetEnteredName] = useState(\"\");\n  const [enteredPrice, SetEnteredPrice] = useState(\"\");\n  const [TypeName, setTypeName] = useState(\"default\");\n\n\n  // an useState for the form which will appear when selected an option through TypeSwitcher.\n  const [TypeForm, SetTypeForm] = useState(<p></p>);\n\n  // a navigate for jumping to the home page.\n  let navigate = useNavigate();\n\n  // Gets data from input box and updates it to the new value.\n  const WeightOnChange = (event) => {\n    SetEnteredWeight(event.target.value);\n  };\n\n  // Gets data from input box and updates it to the new value.\n  const SizeOnChange = (event) => {\n    SetEnteredSize(event.target.value);\n  };\n\n  // Gets data from input box and updates it to the new value.\n  const HeightOnChange = (val) => {\n    SetEnteredHeight(val.target.value);\n  };\n\n  // Gets data from input box and updates it to the new value.\n  const WidthOnChange = (event) => {\n    SetEnteredWidth(event.target.value);\n  };\n\n  // Gets data from input box and updates it to the new value.\n  const LenghtOnChange = (event) => {\n    SetEnteredLenght(event.target.value);\n  };\n\n  // Gets data from input box and updates it to the new value.\n  const NameOnChange = (event) => {\n    SetEnteredName(event.target.value);\n  };\n\n  // Gets data from input box and updates it to the new value.\n  const PriceOnChange = (event) => {\n    SetEnteredPrice(event.target.value);\n  };\n\n  // Gets data from input box and updates it to the new value.\n  const SkuOnChange = (event) => {\n    SetEnteredSku(event.target.value);\n  };\n\n  // the form for dvd when it selected through TypeSwitcher.\n  const dvdForm = () => {\n\n      return (\n        <div>\n          <br />\n          <label className=\"LabelSize\">Size (MB)</label>\n          <input\n            name=\"size\"\n            id=\"size\"\n            type=\"text\"\n            defaultValue={enteredSize}\n            onChange={SizeOnChange}\n          ></input>\n          <br />\n          <b className=\"dvdDescr\">Please, provide DVD size in MB.</b>\n        </div>\n      );\n  };\n  \n  // the form for Book when it selected through TypeSwitcher.\n  const bookForm = () => {\n      return (\n        <div>\n          <br />\n          <label className=\"LabelSize\">Weight (Kg)</label>\n          <input\n            name=\"weight\"\n            id=\"weight\"\n            defaultValue={enteredWeight}\n            onChange={WeightOnChange}\n          ></input>\n          <br />\n          <b className=\"BookDescr\">Please, provide book weight in Kg.</b>\n        </div>\n      );\n  };\n  \n  // the form for Furniture when it selected through TypeSwitcher.\n  const FurnForm = () => {\n      return (\n        <div>\n          <br />\n          <label className=\"LabelSize\">Height (CM)</label>\n          <input\n            name=\"height\"\n            id=\"height\"\n            defaultValue={enteredHeight}\n            onChange={HeightOnChange}\n          ></input>\n          <br />\n          <label className=\"LabelSize\">Width (CM) </label>\n          <input\n            name=\"width\"\n            id=\"width\"\n            defaultValue={enteredWidth}\n            onChange={WidthOnChange}\n          ></input>\n          <br />\n          <label className=\"LabelSize\">Lenght (CM)</label>\n          <input\n            id=\"lenght\"\n            name=\"lenght\"\n            defaultValue={enteredLenght}\n            onChange={LenghtOnChange}\n          ></input>\n          <br />\n          <b className=\"dvdDescr\">Please, provide Dimension in HxWxL.</b>\n        </div>\n      );\n  };\n  \n  const Type = (e) => {\n\n    let Value = e.target.value;\n      // it sets useState depends on the chosen option\n      if (Value === \"DVD\") {\n        SetTypeForm(dvdForm);\n        setTypeName(\"dvd\");\n      }\n      else if (Value === \"Furniture\") {\n        SetTypeForm(FurnForm);\n        setTypeName(\"furniture\");\n      }\n      else if (Value === \"Book\") {\n        SetTypeForm(bookForm);\n        setTypeName(\"book\");\n      }\n      else\n      {\n        SetTypeForm();\n        setTypeName(\"default\");\n      }\n  };\n\n  // this function handles validation when user tries to submit/add product. if it fails an alert message appears\n  const validation = () => {\n    // Two flags for check\n    let EmptyBox = false;\n    let invalidData = false;\n    \n    // checks product's simple requirements. if any box is empty, flag gets set to true.\n    if (enteredSku === \"\" ||enteredName === \"\" ||enteredPrice === \"\" || TypeName === \"default\")\n      EmptyBox = true;\n\n    // This if statement converts the string enteredPrice to Float then converts again to String. Finally compares\n    //first data and if there is any difference then it sets the invalidData flag.\n    if(parseFloat(enteredPrice).toString() !== enteredPrice)\n      invalidData = true;\n\n    // checks type switcher's value. Then checks input box that belongs this SwitchType.\n    if (TypeName === \"dvd\") {\n      if (enteredSize === \"\") \n        EmptyBox = true; \n \n    // This if statement converts the string EnteredSize to Float then converts again to String. Finally compares\n    //with first data and if there is any difference then it sets the invalidData flag.\n      if(parseFloat(enteredSize).toString() !== enteredSize)\n        invalidData = true;\n    }\n    \n    // checks type switcher's value. Then checks input box that belongs this SwitchType.\n    if (TypeName === \"book\") {\n      if (enteredWeight === \"\") \n        EmptyBox = true;\n      \n    // This if statement converts the string EnteredWeight to Float then converts again to String. Finally compares\n    //with first data and if there is any difference then it sets the invalidData flag.\n      if(parseFloat(enteredWeight).toString() !== enteredWeight) \n        invalidData = true;\n    }\n\n    // checks type switcher's value. Then checks input box that belongs this SwitchType.\n    if (TypeName === \"furniture\") {\n      if (enteredHeight === \"\" || enteredLenght === \"\" || enteredWidth === \"\")\n        EmptyBox = true;\n\n    // This if statement converts the string EnteredHeight, enteredLenght and EnteredWidth to Float then converts \n    //again to String. Finally compares with first data and if there is any difference then it sets the invalidData flag.\n      if(parseFloat(enteredHeight).toString() !== enteredHeight || parseFloat(enteredLenght).toString() !== enteredLenght ||\n        parseFloat(enteredWidth).toString() !== enteredWidth)\n        invalidData = true;\n    }\n\n    // Function finally returns two of flags.\n    return { IsEmpty : EmptyBox, IsNotDataType : invalidData};\n  };\n\n  // This function is called when save button clicked.\n  const SaveBtn = () => {\n\n    // validation function's return values are transferred to IsNotValid data.\n    let IsNotValid = validation();\n\n    // calls alert when there is any empty box.\n    if (IsNotValid.IsEmpty){\n      alert(\"Please, submit required data\");\n      return;\n    }\n\n    // calls alert when there is invalid datatype in any box.\n    if(IsNotValid.IsNotDataType){\n      alert(\"Please, provide the data of indicated type\");\n      return;\n    }\n  \n    return \"Successed\";\n  };\n\n  const FormSubmitHandler  = (e) =>\n    {\n      e.preventDefault();\n\n      // data which is will be send to back-end.\n      const DataObj = {\n        SKU : enteredSku,\n        Name : enteredName,\n        Price : enteredPrice,\n        Attribute : \"\"\n      }\n\n      // a statement to get if it is not succeed.\n      if(SaveBtn() !== \"Successed\")\n        return;\n      \n      // a switch case for determine which data will be send to database.\n      switch (TypeName)\n      {\n        case \"dvd\":\n          DataObj.Attribute = enteredSize;\n          Dummy_Data.push(DataObj);\n          axios.post(\"http://localhost/php/products/Dvd.php\",DataObj).then(Response => console.log(Response))\n          .catch(error => console.log(error));\n          break;\n\n        case \"book\":\n          DataObj.Attribute = enteredWeight;\n          Dummy_Data.push(DataObj);\n          axios.post(\"http://localhost:80/php/Products/Book.php\",DataObj).then(Response => console.log(Response))\n          .catch(error => console.log(error));\n          break;\n\n        case \"furniture\":\n          DataObj.Attribute = enteredHeight + \" \" + enteredWidth + \" \" + enteredLenght;\n          Dummy_Data.push(DataObj);\n          axios.post(\"http://localhost:80/php/Products/Furniture.php\",DataObj).then(Response => console.log(Response))\n          .catch(error => console.log(error));\n          break;\n      }\n\n      console.log(DataObj);\n      navigate(\"/\");\n      //window.location.reload();\n    } \n\n  return (\n \n      <form name=\"product_form\" id=\"product_form\" onSubmit={FormSubmitHandler}>\n        <h1 className=\"Header\">Product Add</h1>\n        <input\n          type=\"button\"\n          value=\"Cancel\"\n          className=\"CancelBtn\"\n          onClick={() => navigate(\"/\")}\n        />\n        <input\n          type=\"submit\"\n          value=\"Save\"\n          className=\"SaveBtn\"\n        />\n        <hr className=\"line\" />\n        <div className=\"field\">\n          <label className=\"label\">SKU</label>\n          <input\n            type=\"text\"\n            name=\"sku\"\n            id=\"sku\"\n            value={enteredSku}\n            onChange={SkuOnChange}\n          />\n          <br />\n          <label className=\"label\">Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            value={enteredName}\n            onChange={NameOnChange}\n          />\n          <br />\n          <label className=\"label\">Price ($) </label>\n          <input\n            className=\"inputfieldPrice\"\n            name=\"price\"\n            id=\"price\"\n            value={enteredPrice}\n            onChange={PriceOnChange}\n          />\n          <br />\n            <label className=\"label\">Type Switcher</label>\n              <select id=\"productType\" onChange={Type}>\n                <option value=\"default\">Select an option</option>\n                <option value=\"DVD\" >DVD</option>\n                <option value=\"Book\" >Book</option>\n                <option value=\"Furniture\">Furniture</option>\n              </select>\n        </div>\n        {TypeForm}\n        <hr className=\"line\" />\n      </form>\n  );\n};\n\nexport default AddProduct;\n","import { useState } from \"react\"\r\nimport React from 'react';\r\n\r\n// empty array for itemsid.\r\nlet DeleteList = [];\r\n\r\nconst MassDeleteItems = (ID) =>\r\n{\r\n    // if ID then go.\r\n    if(ID == 0 || ID)\r\n    {\r\n        // DeleteList has same id then delete it.\r\n        if(DeleteList.includes(ID))\r\n        {\r\n            DeleteList = DeleteList.filter(x => x !== ID);\r\n            return;\r\n        }\r\n        // add New ID\r\n        DeleteList.push(ID)\r\n        return console.log(DeleteList);  \r\n    }\r\n    return DeleteList;\r\n}\r\n\r\nexport default MassDeleteItems;","import \"./Product.css\"\nimport React, { useState } from 'react';\nimport MassDeleteItems from \"../util/massdelteitems.js\";\n\nconst Product = (props) =>\n{\n   \n// an useState for checkbox.\nconst [isChecked, setIsChecked] = useState(true);\n\n// when an item selected by checkbox, it sends the data to a massdeleteitems function.\nconst CheckBoxHandler =() =>\n{\n    setIsChecked(!isChecked);\n    MassDeleteItems(props.ID);\n    \n};\n\n \n    return(\n        <div className=\"ProductMain\">\n            <input id ={props.ID} type=\"checkbox\" className=\"delete-checkbox\" onChange={CheckBoxHandler}/>\n            <div className=\"Product\">\n                <h5 className=\"Sku\">{props.Sku}</h5>\n                <h5>{props.Name}</h5>\n                <h5>{props.Price} $</h5>\n                <h5>{props.AttType} {props.Attribute} </h5>\n            </div>\n        </div>\n    )\n}\n\nexport default Product;","import React from \"react\";\nimport Product from \"./Product\";\nimport \"./ProductFrame.css\";\nimport \"./Product.js\";\n\nconst Products = (props) => {\n  if (props.items.length > 0) {\n  }\n\n  return (\n    <div className=\"Frame\">\n      <ul>\n        {props.items.sort((x,y) => x.PrdID - y.PrdID).map((product) => (\n          <Product\n            ID={product.PrdID}\n            Sku={product.Sku}\n            Name={product.Name}\n            Price={product.Price}\n            AttType={product.AttType}\n            Attribute={product.Attribute}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Products;\n","import axios from \"axios\";\r\n\r\n\r\n\r\n\r\nconst DeleteFromDB = (props) =>\r\n{\r\n\r\n    axios.post(\"http://localhost/php/database/deleteitems.php\", props).then(response => console.log(response))\r\n    .catch(error => console.log(error))\r\n\r\n}\r\n    \r\n\r\nexport default DeleteFromDB;","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport './home.css';\r\nimport {useNavigate } from 'react-router-dom';\r\nimport Products from '../Product/Products';\r\nimport MassDeleteItems from '../util/massdelteitems';\r\nimport DeleteFromDB from \"../util/Delete-from-db\";\r\nimport DummyData from \"../util/dummydata\";\r\n\r\n// The array that will fill fake product data if there is no db connection.\r\nlet Dummy_Data = DummyData();\r\nfunction Home() {\r\n  \r\n  // UseState flag for fetching data with useEffect from Database if any data gets delete or add.\r\n  const [fetchData, SetFetchData] = useState(1);\r\n  \r\n  // a navigate instance for jumping to the /addproduct page.\r\n  let navigate = useNavigate(); \r\n\r\n  // useState for Product_array to add or delete some product. if there is no connection, it will filled up with\r\n  //dump data.\r\n  const [AllItems, SetAllItems] = useState(Dummy_Data);\r\n\r\n  // it gets active when user clicks to Mass Delete button\r\n  const DeleteBtn = () =>\r\n  {\r\n    // Gets the items ids from Mass Delete Items function and transfers to items variable.\r\n    const items = MassDeleteItems();\r\n\r\n    // if nothing selected then returns.\r\n    if(items.length === 0)\r\n      return;\r\n    \r\n    // sets as a parameter the items for deleting from database.\r\n    DeleteFromDB(items);\r\n    /*\r\n    console.log(\"items : \"+ items);\r\n    let temp = [];\r\n    Dummy_Data.forEach(x => temp.push(x.PrdID));\r\n    items.forEach(x => \r\n      {\r\n        if(temp.includes(x))\r\n        {\r\n          Dummy_Data =Dummy_Data.filter(y => y.PrdID != x);\r\n        }\r\n          \r\n      });\r\n      SetAllItems(Dummy_Data);\r\n      */\r\n\r\n    SetFetchData(0);\r\n    \r\n  };\r\n\r\n  // gets products from database -like api- then sets main menu products with data that comes from database.\r\n  useEffect(() => {fetch('http://localhost/php/?action=getproducts', \r\n                {method : \"POST\", action : \"project\"}\r\n  ).then( res => res.json()).then(data => SetAllItems(data)).catch(error => console.log(error))}, \r\n    [fetchData]\r\n  )\r\n\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      <h1 className='HeadProduct'>Product List</h1>\r\n      <input type=\"button\"  id=\"delete-product-btn\" className='DeleteBtn' value=\"MASS DELETE\" onClick={DeleteBtn}/>\r\n      <input type=\"button\" id=\"ADD\" value=\"ADD\" onClick={() => navigate(\"/add-product\")}/>\r\n      <hr className='Line'/>\r\n      <Products items={AllItems}/>\r\n      <hr className='Line'/>\r\n      \r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport {BrowserRouter as Router,Routes,Route, HashRouter,} from \"react-router-dom\";\nimport AddProduct from './pages/addproduct';\nimport Home from './pages/home';\n\nfunction App() {\n  \n  return (\n    <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"add-product\" element = {<AddProduct/>} />\n    </Routes>\n  </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  \n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}