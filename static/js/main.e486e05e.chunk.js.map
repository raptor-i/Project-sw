{"version":3,"sources":["reportWebVitals.js","pages/addproduct.js","util/massdelteitems.js","Product/Product.js","Product/Products.js","util/Delete-from-db.js","pages/home.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","AddProduct","_useState","useState","_useState2","Object","slicedToArray","enteredWeight","SetEnteredWeight","_useState3","_useState4","enteredSize","SetEnteredSize","_useState5","_useState6","enteredHeight","SetEnteredHeight","_useState7","_useState8","enteredWidth","SetEnteredWidth","_useState9","_useState10","enteredLenght","SetEnteredLenght","_useState11","_useState12","enteredSku","SetEnteredSku","_useState13","_useState14","enteredName","SetEnteredName","_useState15","_useState16","enteredPrice","SetEnteredPrice","_useState17","_useState18","TypeName","setTypeName","config","headers","Content-Type","_useState19","react_default","a","createElement","_useState20","TypeForm","SetTypeForm","navigate","useNavigate","WeightOnChange","event","target","value","SizeOnChange","HeightOnChange","val","WidthOnChange","LenghtOnChange","dvdForm","className","name","id","type","defaultValue","onChange","bookForm","FurnForm","SaveBtn","IsNotValid","EmptyBox","invalidData","parseFloat","toString","IsEmpty","IsNotDataType","validation","alert","onSubmit","preventDefault","DataObj","SKU","Name","Price","Attribute","axios","post","Response","console","log","catch","error","window","location","reload","onClick","Combobox","data","dataKey","textField","Value","DeleteList","MassDeleteItems","ID","includes","filter","x","push","Product","props","isChecked","setIsChecked","Sku","AttType","Products","items","length","sort","y","PrdID","map","product","src_Product_Product","DeleteFromDB","response","Product_array","Home","AllItems","SetAllItems","useEffect","fetch","method","action","res","json","Product_Products","App","react_router_dom","react_router","path","element","pages_home","pages_addproduct","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.e486e05e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useState } from \"react\";\nimport \"./addproduct.css\";\nimport Combobox from \"react-widgets/Combobox\";\nimport \"react-widgets/styles.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst AddProduct = () => {\n\n  // useStates for each input box.\n  const [enteredWeight, SetEnteredWeight] = useState(\"\");\n  const [enteredSize, SetEnteredSize] = useState(\"\");\n  const [enteredHeight, SetEnteredHeight] = useState(\"\");\n  const [enteredWidth, SetEnteredWidth] = useState(\"\");\n  const [enteredLenght, SetEnteredLenght] = useState(\"\");\n  const [enteredSku, SetEnteredSku] = useState(\"\");\n  const [enteredName, SetEnteredName] = useState(\"\");\n  const [enteredPrice, SetEnteredPrice] = useState(\"\");\n  const [TypeName, setTypeName] = useState(\"default\");\n\n  // data types for type switcher.\n  const data = [\n    {id : 0, name : \"DVD\"},\n    {id : 1, name : \"Book\"},\n    {id : 2, name : \"Furniture\"}\n  ]\n\n  \n\n  var config ={\n    headers : {\"Content-Type\" : \"application/x-wwww-form-urlencoded\"}\n  };\n\n  // an useState for the form which will appear when selected an option through TypeSwitcher.\n  const [TypeForm, SetTypeForm] = useState(<p></p>);\n\n  // a navigate for jumping to the home page.\n  let navigate = useNavigate();\n\n  // Gets data from input box and updates it to the new value.\n  const WeightOnChange = (event) => {\n    SetEnteredWeight(event.target.value);\n  };\n\n  // Gets data from input box and updates it to the new value.\n  const SizeOnChange = (event) => {\n    SetEnteredSize(event.target.value);\n  };\n\n  // Gets data from input box and updates it to the new value.\n  const HeightOnChange = (val) => {\n    SetEnteredHeight(val.target.value);\n  };\n\n  // Gets data from input box and updates it to the new value.\n  const WidthOnChange = (event) => {\n    SetEnteredWidth(event.target.value);\n  };\n\n  // Gets data from input box and updates it to the new value.\n  const LenghtOnChange = (event) => {\n    SetEnteredLenght(event.target.value);\n  };\n\n  // Gets data from input box and updates it to the new value.\n  const NameOnChange = (event) => {\n    SetEnteredName(event.target.value);\n  };\n\n  // Gets data from input box and updates it to the new value.\n  const PriceOnChange = (event) => {\n    SetEnteredPrice(event.target.value);\n  };\n\n  // Gets data from input box and updates it to the new value.\n  const SkuOnChange = (event) => {\n    SetEnteredSku(event.target.value);\n  };\n\n  // the form for dvd when it selected through TypeSwitcher.\n  const dvdForm = () => {\n\n      return (\n        <div>\n          <br />\n          <label className=\"LabelSize\">Size (MB)</label>\n          <input\n            name=\"size\"\n            id=\"size\"\n            type=\"text\"\n            defaultValue={enteredSize}\n            onChange={SizeOnChange}\n          ></input>\n          <br />\n          <b className=\"dvdDescr\">Please, provide DVD size in MB.</b>\n        </div>\n      );\n  };\n  \n  // the form for Book when it selected through TypeSwitcher.\n  const bookForm = () => {\n      return (\n        <div>\n          <br />\n          <label className=\"LabelSize\">Weight (Kg)</label>\n          <input\n            name=\"weight\"\n            id=\"weight\"\n            defaultValue={enteredWeight}\n            onChange={WeightOnChange}\n          ></input>\n          <br />\n          <b className=\"BookDescr\">Please, provide book weight in Kg.</b>\n        </div>\n      );\n  };\n  \n  // the form for Furniture when it selected through TypeSwitcher.\n  const FurnForm = () => {\n      return (\n        <div>\n          <br />\n          <label className=\"LabelSize\">Height (CM)</label>\n          <input\n            name=\"height\"\n            id=\"height\"\n            defaultValue={enteredHeight}\n            onChange={HeightOnChange}\n          ></input>\n          <br />\n          <label className=\"LabelSize\">Width (CM) </label>\n          <input\n            name=\"width\"\n            id=\"width\"\n            defaultValue={enteredWidth}\n            onChange={WidthOnChange}\n          ></input>\n          <br />\n          <label className=\"LabelSize\">Lenght (CM)</label>\n          <input\n            name=\"lenght\"\n            id=\"lenght\"\n            defaultValue={enteredLenght}\n            onChange={LenghtOnChange}\n          ></input>\n          <br />\n          <b className=\"dvdDescr\">Please, provide Dimension in HxWxL.</b>\n        </div>\n      );\n  };\n  \n  const Type = (Value) => {\n  \n      Value = Value.id;\n\n      // it sets useState depends on the chosen option\n      if (Value === 0) {\n        SetTypeForm(dvdForm);\n        setTypeName(\"dvd\");\n      }\n      else if (Value === 2) {\n        SetTypeForm(FurnForm);\n        setTypeName(\"furniture\");\n      }\n      else if (Value === 1) {\n        SetTypeForm(bookForm);\n        setTypeName(\"book\");\n      }\n      else\n      {\n        SetTypeForm();\n        setTypeName(\"default\");\n      }\n  };\n\n  // this function handles validation when user tries to submit/add product. if it fails an alert message appears\n  const validation = () => {\n    // Two flags for check\n    let EmptyBox = false;\n    let invalidData = false;\n    \n    // checks product's simple requirements. if any box is empty, flag gets set to true.\n    if (enteredSku === \"\" ||enteredName === \"\" ||enteredPrice === \"\" || TypeName === \"default\")\n      EmptyBox = true;\n\n    // This if statement converts the string enteredPrice to Float then converts again to String. Finally compares\n    //first data and if there is any difference then it sets the invalidData flag.\n    if(parseFloat(enteredPrice).toString() !== enteredPrice)\n      invalidData = true;\n\n    // checks type switcher's value. Then checks input box that belongs this SwitchType.\n    if (TypeName === \"dvd\") {\n      if (enteredSize === \"\") \n        EmptyBox = true; \n \n    // This if statement converts the string EnteredSize to Float then converts again to String. Finally compares\n    //with first data and if there is any difference then it sets the invalidData flag.\n      if(parseFloat(enteredSize).toString() !== enteredSize)\n        invalidData = true;\n    }\n    \n    // checks type switcher's value. Then checks input box that belongs this SwitchType.\n    if (TypeName === \"book\") {\n      if (enteredWeight === \"\") \n        EmptyBox = true;\n      \n    // This if statement converts the string EnteredWeight to Float then converts again to String. Finally compares\n    //with first data and if there is any difference then it sets the invalidData flag.\n      if(parseFloat(enteredWeight).toString() !== enteredWeight) \n        invalidData = true;\n    }\n\n    // checks type switcher's value. Then checks input box that belongs this SwitchType.\n    if (TypeName === \"furniture\") {\n      if (enteredHeight === \"\" || enteredLenght === \"\" || enteredWidth === \"\")\n        EmptyBox = true;\n\n    // This if statement converts the string EnteredHeight, enteredLenght and EnteredWidth to Float then converts \n    //again to String. Finally compares with first data and if there is any difference then it sets the invalidData flag.\n      if(parseFloat(enteredHeight).toString() !== enteredHeight || parseFloat(enteredLenght).toString() !== enteredLenght ||\n        parseFloat(enteredWidth).toString() !== enteredWidth)\n        invalidData = true;\n    }\n\n    // Function finally returns two of flags.\n    return { IsEmpty : EmptyBox, IsNotDataType : invalidData};\n  };\n\n  // This function is called when save button clicked.\n  const SaveBtn = () => {\n\n    // validation function's return values are transferred to IsNotValid data.\n    let IsNotValid = validation();\n\n    // calls alert when there is any empty box.\n    if (IsNotValid.IsEmpty){\n      alert(\"Please, submit required data\");\n      return;\n    }\n\n    // calls alert when there is invalid datatype in any box.\n    if(IsNotValid.IsNotDataType){\n      alert(\"Please, provide the data of indicated type\");\n      return;\n    }\n  \n    return \"Successed\";\n  };\n\n  const FormSubmitHandler  = (e) =>\n    {\n      e.preventDefault();\n\n      // data which is will be send to back-end.\n      const DataObj = {\n        SKU : enteredSku,\n        Name : enteredName,\n        Price : enteredPrice,\n        Attribute : \"\"\n      }\n\n      // a statement to get if it is not succeed.\n      if(SaveBtn() !== \"Successed\")\n        return;\n      \n      // a switch case for determine which data will be send to database.\n      switch (TypeName)\n      {\n        case \"dvd\":\n          DataObj.Attribute = enteredSize;\n          axios.post(\"http://localhost/php/products/Dvd.php\",DataObj).then(Response => console.log(Response))\n          .catch(error => console.log(error));\n          break;\n\n        case \"book\":\n          DataObj.Attribute = enteredWeight;\n          axios.post(\"http://localhost:80/php/Products/Book.php\",DataObj,config).then(Response => console.log(Response))\n          .catch(error => console.log(error));\n          break;\n\n        case \"furniture\":\n          DataObj.Attribute = enteredHeight + \" \" + enteredWidth + \" \" + enteredLenght\n          axios.post(\"http://localhost:80/php/Products/Furniture.php\",DataObj,config).then(Response => console.log(Response))\n          .catch(error => console.log(error));\n          break;\n      }\n\n      console.log(DataObj);\n      navigate(\"/\");\n      window.location.reload();\n      console.log(\"Form Submitted\");\n      \n    } \n\n  return (\n    <div>\n      <form name=\"product_form\" id=\"product_form\" onSubmit={FormSubmitHandler}>\n        <h1 className=\"Header\">Product Add</h1>\n        <input\n          type=\"button\"\n          value=\"Cancel\"\n          className=\"CancelBtn\"\n          onClick={() => navigate(\"/\")}\n        />\n        <input\n          type=\"submit\"\n          value=\"Save\"\n          className=\"SaveBtn\"\n        />\n        <hr className=\"line\" />\n        <div className=\"field\">\n          <label className=\"label\">SKU</label>\n          <input\n            type=\"text\"\n            name=\"sku\"\n            id=\"sku\"\n            value={enteredSku}\n            onChange={SkuOnChange}\n          />\n          <br />\n          <label className=\"label\">Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            value={enteredName}\n            onChange={NameOnChange}\n          />\n          <br />\n          <label className=\"label\">Price ($) </label>\n          <input\n            className=\"inputfieldPrice\"\n            name=\"price\"\n            id=\"price\"\n            value={enteredPrice}\n            onChange={PriceOnChange}\n          />\n          <br />\n          <div className=\"typeSwitcher\">\n            <label className=\"label\">Type Switcher</label>\n              <Combobox id=\"productType\"\n                data={data}\n                dataKey='id'\n                textField='name'\n                onChange={Type}\n                defaultValue={\"Select an option\"}\n              />\n          </div>\n        </div>\n        {TypeForm}\n        <hr className=\"line\" />\n      </form>\n    </div>\n  );\n};\n\nexport default AddProduct;\n","import { useState } from \"react\"\r\nimport React from 'react';\r\n\r\n// empty array for itemsid.\r\nlet DeleteList = [];\r\n\r\nconst MassDeleteItems = (ID) =>\r\n{\r\n    // if ID then go.\r\n    if(ID == 0 || ID)\r\n    {\r\n        // DeleteList has same id then delete it.\r\n        if(DeleteList.includes(ID))\r\n        {\r\n            DeleteList = DeleteList.filter(x => x !== ID);\r\n            return;\r\n        }\r\n        // add New ID\r\n        DeleteList.push(ID)\r\n        return console.log(DeleteList);  \r\n    }\r\n    return DeleteList;\r\n}\r\n\r\nexport default MassDeleteItems;","import \"./Product.css\"\nimport React, { useState } from 'react';\nimport MassDeleteItems from \"../util/massdelteitems.js\";\n\nconst Product = (props) =>\n{\n   \n// an useState for checkbox.\nconst [isChecked, setIsChecked] = useState(true);\n\n// when an item selected by checkbox, it sends the data to a massdeleteitems function.\nconst CheckBoxHandler =() =>\n{\n    setIsChecked(!isChecked);\n    MassDeleteItems(props.ID);\n    \n};\n\n \n    return(\n        <div className=\"ProductMain\">\n            <input id ={props.ID} type=\"checkbox\" className=\"delete-checkbox\" onChange={CheckBoxHandler}/>\n            <div className=\"Product\">\n                <h5 className=\"Sku\">{props.Sku}</h5>\n                <h5>{props.Name}</h5>\n                <h5>{props.Price} $</h5>\n                <h5>{props.AttType} {props.Attribute} </h5>\n            </div>\n        </div>\n    )\n}\n\nexport default Product;","import React from \"react\";\nimport Product from \"./Product\";\nimport \"./ProductFrame.css\";\nimport \"./Product.js\";\n\nconst Products = (props) => {\n  if (props.items.length > 0) {\n  }\n\n  return (\n    <div className=\"Frame\">\n      <ul>\n        {props.items.sort((x,y) => x.PrdID - y.PrdID).map((product) => (\n          <Product\n            ID={product.PrdID}\n            Sku={product.Sku}\n            Name={product.Name}\n            Price={product.Price}\n            AttType={product.AttType}\n            Attribute={product.Attribute}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Products;\n","import axios from \"axios\";\r\n\r\n\r\n\r\n\r\nconst DeleteFromDB = (props) =>\r\n{\r\n\r\n    axios.post(\"http://localhost/php/database/deleteitems.php\", props).then(response => console.log(response))\r\n    .catch(error => console.log(error))\r\n\r\n}\r\n    \r\n\r\nexport default DeleteFromDB;","import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport './home.css';\r\nimport {useNavigate } from 'react-router-dom';\r\nimport Products from '../Product/Products';\r\nimport MassDeleteItems from '../util/massdelteitems';\r\nimport DeleteFromDB from \"../util/Delete-from-db\";\r\n\r\n// The array that will fill fake product data if there is no db connection.\r\nconst Product_array = [\r\n  {\r\n    PrdID : 0,\r\n    Sku : \"TR512313\",\r\n    Name : \"CdDvD\",\r\n    Price : \"35\",\r\n    Attribute : \"700\",\r\n    AttType : \"Size  : 700MB\"\r\n  },\r\n  {\r\n    PrdID : 1,\r\n    Sku : \"JS4546\",\r\n    Name : \"Furniture\",\r\n    Price : \"100\",\r\n    Attribute : \"50x90x70\",\r\n    AttType : \"Dimension : 50x90x70\"\r\n  },\r\n  {\r\n    PrdID : 5,\r\n    Sku : \"Bk1534\",\r\n    Name : \"Book\",\r\n    Price : \"12\",\r\n    Attribute : \"1\",\r\n    AttType : \"Weight (KG) :\"\r\n  },\r\n  {\r\n    PrdID : 3,\r\n    Sku : \"Bk1534\",\r\n    Name : \"Book\",\r\n    Price : \"12\",\r\n    Attribute : \"1\",\r\n    AttType : \"Weight (KG) :\"\r\n  },\r\n  {\r\n    PrdID : 12,\r\n    Sku : \"Bk1534\",\r\n    Name : \"Book\",\r\n    Price : \"12\",\r\n    Attribute : \"1\",\r\n    AttType : \"Weight (KG) :\"\r\n  },\r\n  {\r\n    PrdID : 9,\r\n    Sku : \"Bk1534\",\r\n    Name : \"Book\",\r\n    Price : \"12\",\r\n    Attribute : \"1\",\r\n    AttType : \"Weight (KG) :\"\r\n  },\r\n  {\r\n    PrdID : 5,\r\n    Sku : \"Bk1534\",\r\n    Name : \"Book\",\r\n    Price : \"12\",\r\n    Attribute : \"1\",\r\n    AttType : \"Weight (KG) :\"\r\n  },\r\n  {\r\n    PrdID : 14,\r\n    Sku : \"Bk1534\",\r\n    Name : \"Book\",\r\n    Price : \"12\",\r\n    Attribute : \"1\",\r\n    AttType : \"Weight (KG) :\"\r\n  },\r\n  {\r\n    PrdID : 75,\r\n    Sku : \"Bk1534\",\r\n    Name : \"Book\",\r\n    Price : \"12\",\r\n    Attribute : \"1\",\r\n    AttType : \"Weight (KG) :\"\r\n  },\r\n  {\r\n    PrdID : 34,\r\n    Sku : \"Bk1534\",\r\n    Name : \"Book\",\r\n    Price : \"12\",\r\n    Attribute : \"1\",\r\n    AttType : \"Weight :\"\r\n  },\r\n]\r\n\r\nfunction Home() {\r\n  \r\n  // a navigate instance for jumping to the /addproduct page.\r\n  let navigate = useNavigate(); \r\n\r\n  // useState for Product_array to add or delete some product. if there is no connection, it will filled up with\r\n  //dump data.\r\n  const [AllItems, SetAllItems] = useState(Product_array);\r\n\r\n  // it gets active when user clicks to Mass Delete button\r\n  const DeleteBtn = () =>\r\n  {\r\n    // Gets the items ids from Mass Delete Items function and transfers to items variable.\r\n    const items = MassDeleteItems();\r\n\r\n    // if nothing selected then returns.\r\n    if(items.length === 0)\r\n      return;\r\n    \r\n    // sets as a parameter the items for deleting from database.\r\n    DeleteFromDB(items);\r\n    \r\n    window.location.reload();\r\n  };\r\n\r\n  // gets products from database -like api- then sets main menu products with data that comes from database.\r\n  useEffect(() => {fetch('http://localhost/php/?action=getproducts', \r\n                {method : \"POST\", action : \"project\"}\r\n  ).then( res => res.json()).then(data => SetAllItems(data)).catch(error => console.log(error))}, \r\n    []\r\n  )\r\n\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      <h1 className='HeadProduct'>Product List</h1>\r\n      <input type=\"button\" name='delete-product-btn' id=\"delete-product-btn\" className='DeleteBtn' value=\"MASS DELETE \" onClick={DeleteBtn}/>\r\n      <input type=\"button\" className='AddBtn' value=\"ADD\" onClick={() => navigate(\"/add-product\")}/>\r\n      <hr className='Line'/>\r\n      <Products items={AllItems}/>\r\n      <hr className='Line'/>\r\n      \r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport {BrowserRouter as Router,Routes,Route,} from \"react-router-dom\";\nimport AddProduct from './pages/addproduct';\nimport Home from './pages/home';\n\nfunction App() {\n  \n  return (\n    <Router>\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"add-product\" element = {<AddProduct/>} />\n    </Routes>\n  </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  \n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}